#include <iostream>
#include "structs_unions.h"

POINT point;    //создаем переменную структуры с двумя битовыми полями
CODE c;      //создаем переменную объединения двух структур

int main() {

    point = {   //заполним структуру с битовыми полями
        .x = 2,
        .y = 5
    };

    /* либо сделаем тоже самое через указатель */
    POINT *ptr_str = &point;    //создадим указатель на структуру
    /* присвоим им значения */
    ptr_str->x = 2;
    ptr_str->y = 5;


    c.p = point;    //присвоем первому объединению структуру
    /* или сделаем тоже самое черз указатель */
    CODE *ptr_un = &c;  //создадим указатель на объединение
    ptr_un->p = *ptr_str;   //присвоем этому объединению значения через указатели

    std::cout << "7 6 5 4 3 2 1 0" << std::endl;                                        //7 6 5 4 3 2 1 0 

    /* тут мы создали объединение c и через него обращаемся к структуре byte и выводим из него элемены */
    std::cout << c.byte.a7 << " " << c.byte.a6 << " " << c.byte.a5 << " "               //1 0 1 0 0 0 1 0   (цифры 2 и 5)
                << c.byte.a4 << " " << c.byte.a3 << " " << c.byte.a2 << " "         
                << c.byte.a1 << " " << c.byte.a0 << std::endl;

    /* или сделаем тоже самое через указатели */
    std::cout << ptr_un->byte.a7 << " " << ptr_un->byte.a6 << " " << ptr_un->byte.a5 << " " <<
                ptr_un->byte.a4 << " " << ptr_un->byte.a3 << " " << ptr_un->byte.a2 << " " <<
                ptr_un->byte.a1 << " " << ptr_un->byte.a0 << std::endl;
}